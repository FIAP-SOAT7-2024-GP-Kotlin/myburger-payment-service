name: CD MyBurger Payment Service

on:
  workflow_run:
    workflows: ["CI MyBurger Payment Service"]
    types:
      - completed
env:
  REPO_NAME: ${{ github.event.repository.name }}
  IMAGE_NAME: fiapmyburguer/${{ github.event.repository.name }}:latest

jobs:
  deploy:
    name: Deploy to DigitalOcean
    runs-on: ubuntu-latest

    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}

    steps:
      # Checkout do repositório
      - name: Checkout repository
        uses: actions/checkout@v4

      # Autenticação com a DigitalOcean
      - name: Set up DigitalOcean
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_TOKEN_ACCESS }}

      # Armazenar o ID do primeiro cluster na variável de ambiente
      - name: Get First Cluster ID
        run: |
          CLUSTER_ID=$(doctl kubernetes cluster list --format ID --no-header | head -n 1)
          echo "CLUSTER_ID=$CLUSTER_ID" >> $GITHUB_ENV

      # Autenticação com o cluster Kubernetes
      - name: Set up Kubernetes save
        run: |
          doctl kubernetes cluster kubeconfig save ${{ env.CLUSTER_ID }}

      # Atualizar a imagem do deployment
      - name: Update Image
        run: |
          kubectl set image deployment/myburger-payment myburger-payment=${{ env.IMAGE_NAME }}

      # Resgata os logs da pod
      - name: Get logs from pod
        run: |
          POD_NAME=$(kubectl get pods --selector=app=myburger-payment -o jsonpath='{.items[0].metadata.name}')
          kubectl logs $POD_NAME
